MK_JLkeras9.ipynb:    "tt = np.apply_along_axis(roc_singlemu, 1, tt)  # require SingleMu quality\n",
MK_JLkeras9.ipynb:    "def find_emtf_road_quality(ipt):\n",
MK_JLkeras9.ipynb:    "    quality1 = find_emtf_road_quality(ipt1)\n",
MK_JLkeras9.ipynb:    "    quality2 = find_emtf_road_quality(ipt2)\n",
MK_JLkeras9.ipynb:    "    if mode in (11,13,14,15) and quality2 <= (quality1+1):\n",
MK_andrew_mykeras9_2bits.ipynb:    "tt = np.apply_along_axis(roc_singlemu, 1, tt)  # require SingleMu quality\n",
MK_andrew_mykeras9_2bits.ipynb:    "def find_emtf_road_quality(ipt):\n",
MK_andrew_mykeras9_2bits.ipynb:    "    quality1 = find_emtf_road_quality(ipt1)\n",
MK_andrew_mykeras9_2bits.ipynb:    "    quality2 = find_emtf_road_quality(ipt2)\n",
MK_andrew_mykeras9_2bits.ipynb:    "    if mode in (11,13,14,15) and quality2 <= (quality1+1):\n",
MK_andrew_mykeras9_3bits.ipynb:    "tt = np.apply_along_axis(roc_singlemu, 1, tt)  # require SingleMu quality\n",
MK_andrew_mykeras9_3bits.ipynb:    "def find_emtf_road_quality(ipt):\n",
MK_andrew_mykeras9_3bits.ipynb:    "    quality1 = find_emtf_road_quality(ipt1)\n",
MK_andrew_mykeras9_3bits.ipynb:    "    quality2 = find_emtf_road_quality(ipt2)\n",
MK_andrew_mykeras9_3bits.ipynb:    "    if mode in (11,13,14,15) and quality2 <= (quality1+1):\n",
MK_andrew_mykeras9_4bits.ipynb:    "tt = np.apply_along_axis(roc_singlemu, 1, tt)  # require SingleMu quality\n",
MK_andrew_mykeras9_4bits.ipynb:    "def find_emtf_road_quality(ipt):\n",
MK_andrew_mykeras9_4bits.ipynb:    "    quality1 = find_emtf_road_quality(ipt1)\n",
MK_andrew_mykeras9_4bits.ipynb:    "    quality2 = find_emtf_road_quality(ipt2)\n",
MK_andrew_mykeras9_4bits.ipynb:    "    if mode in (11,13,14,15) and quality2 <= (quality1+1):\n",
MK_andrew_mykeras9_5bits.ipynb:    "tt = np.apply_along_axis(roc_singlemu, 1, tt)  # require SingleMu quality\n",
MK_andrew_mykeras9_5bits.ipynb:    "def find_emtf_road_quality(ipt):\n",
MK_andrew_mykeras9_5bits.ipynb:    "    quality1 = find_emtf_road_quality(ipt1)\n",
MK_andrew_mykeras9_5bits.ipynb:    "    quality2 = find_emtf_road_quality(ipt2)\n",
MK_andrew_mykeras9_5bits.ipynb:    "    if mode in (11,13,14,15) and quality2 <= (quality1+1):\n",
MK_andrew_mykeras9_6bits.ipynb:    "tt = np.apply_along_axis(roc_singlemu, 1, tt)  # require SingleMu quality\n",
MK_andrew_mykeras9_6bits.ipynb:    "def find_emtf_road_quality(ipt):\n",
MK_andrew_mykeras9_6bits.ipynb:    "    quality1 = find_emtf_road_quality(ipt1)\n",
MK_andrew_mykeras9_6bits.ipynb:    "    quality2 = find_emtf_road_quality(ipt2)\n",
MK_andrew_mykeras9_6bits.ipynb:    "    if mode in (11,13,14,15) and quality2 <= (quality1+1):\n",
MK_andrew_mykeras9_7bits.ipynb:    "tt = np.apply_along_axis(roc_singlemu, 1, tt)  # require SingleMu quality\n",
MK_andrew_mykeras9_7bits.ipynb:    "def find_emtf_road_quality(ipt):\n",
MK_andrew_mykeras9_7bits.ipynb:    "    quality1 = find_emtf_road_quality(ipt1)\n",
MK_andrew_mykeras9_7bits.ipynb:    "    quality2 = find_emtf_road_quality(ipt2)\n",
MK_andrew_mykeras9_7bits.ipynb:    "    if mode in (11,13,14,15) and quality2 <= (quality1+1):\n",
MKn0_JLkeras9.ipynb:    "tt = np.apply_along_axis(roc_singlemu, 1, tt)  # require SingleMu quality\n",
MKn0_JLkeras9.ipynb:    "def find_emtf_road_quality(ipt):\n",
MKn0_JLkeras9.ipynb:    "    quality1 = find_emtf_road_quality(ipt1)\n",
MKn0_JLkeras9.ipynb:    "    quality2 = find_emtf_road_quality(ipt2)\n",
MKn0_JLkeras9.ipynb:    "    if mode in (11,13,14,15) and quality2 <= (quality1+1):\n",
MKn1_JLkeras9.ipynb:    "tt = np.apply_along_axis(roc_singlemu, 1, tt)  # require SingleMu quality\n",
MKn1_JLkeras9.ipynb:    "def find_emtf_road_quality(ipt):\n",
MKn1_JLkeras9.ipynb:    "    quality1 = find_emtf_road_quality(ipt1)\n",
MKn1_JLkeras9.ipynb:    "    quality2 = find_emtf_road_quality(ipt2)\n",
MKn1_JLkeras9.ipynb:    "    if mode in (11,13,14,15) and quality2 <= (quality1+1):\n",
mykeras10.ipynb:    "tt = np.apply_along_axis(roc_singlemu, 1, tt)  # require SingleMu quality\n",
mykeras10.ipynb:    "def find_emtf_road_quality(ipt):\n",
mykeras10.ipynb:    "    #quality1 = find_emtf_road_quality(ipt1)\n",
mykeras10.ipynb:    "    #quality2 = find_emtf_road_quality(ipt2)\n",
mykeras3.ipynb:    "def emtf_road_quality(ipt):\n",
mykeras3.ipynb:    "    quality1 = emtf_road_quality(ipt1)\n",
mykeras3.ipynb:    "    quality2 = emtf_road_quality(ipt2)\n",
mykeras3.ipynb:    "    if trk_mode in (11,13,14,15) and quality2 <= (quality1+1):\n",
mykeras3.ipynb:    "    quality1 = emtf_road_quality(ipt1)\n",
mykeras3.ipynb:    "    quality2 = emtf_road_quality(ipt2)\n",
mykeras3.ipynb:    "    if trk_mode in (11,13,14,15) and quality2 <= (quality1+1):\n",
mykeras3a.ipynb:    "def emtf_road_quality(ipt):\n",
mykeras3a.ipynb:    "    quality1 = emtf_road_quality(ipt1)\n",
mykeras3a.ipynb:    "    quality2 = emtf_road_quality(ipt2)\n",
mykeras3a.ipynb:    "    if trk_mode in (11,13,14,15) and quality2 <= (quality1+1):\n",
mykeras3a.ipynb:    "    quality1 = emtf_road_quality(ipt1)\n",
mykeras3a.ipynb:    "    quality2 = emtf_road_quality(ipt2)\n",
mykeras3a.ipynb:    "    if trk_mode in (11,13,14,15) and quality2 <= (quality1+1):\n",
mykeras4.ipynb:    "def emtf_road_quality(ipt):\n",
mykeras4.ipynb:    "    quality1 = emtf_road_quality(ipt1)\n",
mykeras4.ipynb:    "    quality2 = emtf_road_quality(ipt2)\n",
mykeras4.ipynb:    "    if trk_mode in (11,13,14,15) and quality2 <= (quality1+1):\n",
mykeras5.ipynb:    "def emtf_road_quality(ipt):\n",
mykeras5.ipynb:    "    quality1 = emtf_road_quality(ipt1)\n",
mykeras5.ipynb:    "    quality2 = emtf_road_quality(ipt2)\n",
mykeras5.ipynb:    "    if trk_mode in (11,13,14,15) and quality2 <= (quality1+1):\n",
mykeras6.ipynb:    "def emtf_road_quality(ipt):\n",
mykeras6.ipynb:    "    quality1 = emtf_road_quality(ipt1)\n",
mykeras6.ipynb:    "    quality2 = emtf_road_quality(ipt2)\n",
mykeras6.ipynb:    "    if trk_mode in (11,13,14,15) and quality2 <= (quality1+1):\n",
mykeras7.ipynb:    "def emtf_road_quality(ipt):\n",
mykeras7.ipynb:    "    quality1 = emtf_road_quality(ipt1)\n",
mykeras7.ipynb:    "    quality2 = emtf_road_quality(ipt2)\n",
mykeras7.ipynb:    "    if trk_mode in (11,13,14,15) and quality2 <= (quality1+1):\n",
mykeras8.ipynb:    "def emtf_road_quality(ipt):\n",
mykeras8.ipynb:    "    quality1 = emtf_road_quality(ipt1)\n",
mykeras8.ipynb:    "    quality2 = emtf_road_quality(ipt2)\n",
mykeras8.ipynb:    "    #if trk_mode in (11,13,14,15) and quality2 <= (quality1+1):\n",
mykeras8.ipynb:    "    trigger = trk_mode in (11,13,14,15) and quality2 <= (quality1+1)\n",
mykeras9.ipynb:    "tt = np.apply_along_axis(roc_singlemu, 1, tt)  # require SingleMu quality\n",
mykeras9.ipynb:    "def find_emtf_road_quality(ipt):\n",
mykeras9.ipynb:    "    quality1 = find_emtf_road_quality(ipt1)\n",
mykeras9.ipynb:    "    quality2 = find_emtf_road_quality(ipt2)\n",
mykeras9.ipynb:    "    if mode in (11,13,14,15) and quality2 <= (quality1+1):\n",
nn_encode_omtf.py:      # features (phi, theta, bend, quality, time, etc). Currently there are 10.
